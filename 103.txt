LeetCode-103-Binary Tree Zigzag Level Order Traversal
/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    public List<List<Integer>> zigzagLevelOrder(TreeNode root) {
        List res = new ArrayList<Integer>();
        
        if(root==null){
            return res;
        }
        
        Queue<TreeNode> queue = new LinkedList<TreeNode>();
        queue.offer(root);
        boolean reverse = false;
        
        while(!queue.isEmpty()){
            ArrayList<Integer> cur = new ArrayList<Integer>();
            int size = queue.size();
            for(int i=0;i<size;i++){
                root = queue.poll();
                cur.add(root.val);
                if(root.left!=null){
                    queue.offer(root.left);
                }
                if(root.right!=null){
                    queue.offer(root.right);
                }
            }
            if(reverse){
                Collections.reverse(cur);
                reverse = false;
            }else{
                reverse = true;
            }
            res.add(cur);
        }
        return res;
    }
}